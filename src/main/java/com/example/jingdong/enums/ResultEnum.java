package com.example.jingdong.enums;

public enum ResultEnum implements BaseEnum<Object>{

    //系统
    UNKNOWN_ERROR(-1,"UNKNOWN_ERROR"),
    PARAM_ERROR(10000,"PARAM_ERROR"),
    UPLOAD_IMG_FAIL(10001,"文件上传失败"),
    NOT_LOGGED_IN(10002,"NOT_LOGGED_IN"),
    KAPTCHA_CODE_ERROR(10003,"验证码错误"),
    ILLEGAL_OPERATION(10004,"ILLEGAL_OPERATION"),
    REPEAT_PASSWORD_ERROR(10005,"REPEAT_PASSWORD_ERROR"),
    OLD_PASSWORD_ERROR(10006,"OLD_PASSWORD_ERROR"),
    UPDATE_PASSWORD_FAIL(10007,"UPDATE_PASSWORD_FAIL"),

    //店铺
    SHOP_CATEGORY_NOT_EXIST(20000,"SHOP_CATEGORY_NOT_EXIST"),
    SHOP_NOT_EXIST(20001,"SHOP_NOT_EXIST"),
    CATEGORY_UPDATE_FAIL(20002,"CATEGORY_UPDATE_FAIL"),

    //商品
    PRODUCT_CATEGORY_NOT_EXIST(30000,"PRODUCT_CATEGORY_NOT_EXIST"),
    PRODUCT_NOT_EXIST(30001,"PRODUCT_NOT_EXIST" ),
    PRODUCT_STOCK_NOT_ENOUGH(30002,"PRODUCT_STOCK_NOT_ENOUGH"),
    PRODUCT_ADD_FAIL(30003,"PRODUCT_ADD_FAIL"),
    PRODUCT_EDIT_FAIL(30004,"PRODUCT_EDIT_FAIL"),

    //用户
    USER_PARAMS_ERROR(40000,"USER_PARAMS_ERROR"),
    USER_REP_PASSWORD_NOT_MATCH(40001,"USER_REP_PASSWORD_NOT_MATCH"),
    USER_ALREADY_EXIST(40002,"USER_ALREADY_EXIST"),
    ACCOUNT_HAS_A_USERNAME(40015,"ACCOUNT_HAS_A_USERNAME"),
    USER_REGISTER_ERROR(40003,"USER_REGISTER_ERROR"),
    USER_REQUEST_ERROR(40004,"USER_REQUEST_ERROR"),
    USER_PASSWORD_ERROR(40005,"USER_PASSWORD_ERROR"),
    USER_NOT_EXIST(40006,"USER_NOT_EXIST"),
    USER_UPDATE_FAIL(40007,"USER_UPDATE_FAIL"),
    USER_NOT_LOGGED_IN(40008,"USER_NOT_LOGGED_IN"),
    USER_HAS_BEEN_LOCKED(40009,"USER_HAS_BEEN_LOCKED"),
    USER_HAS_BEEN_BOUND(40011,"USER_HAS_BEEN_BOUND"),
    WECHAT_HAS_BEEN_BOUND(123,"WECHAT_HAS_BEEN_BOUND"),
    USER_BOUNDING_FAIL(40012,"USER_BOUNDING_FAIL"),
    USER_WECHAT_NOT_AUTH(40013,"USER_WECHAT_NOT_AUTH"),
    USERNAME_LENGTH_ERROR(40014,"USERNAME_LENGTH_ERROR"),
    PASSWORD_NOT_EXIST(40015,"PASSWORD_NOT_EXIST"),



    //微信授权
    WECHAT_MP_ERROR(50000,"WECHAT_MP_ERROR"),
    WECHAT_AUTH_FAIL(50001,"WECHAT_AUTH_FAIL"),

    //收货地址
    ADDRESS_NOT_EXIST(60000,"ADDRESS_NOT_EXIST"),
    ADDRESS_PARAM_ERROR(60001,"ADDRESS_PARAM_ERROR"),
    ADDRESS_ADD_ERROR(60002,"ADDRESS_ADD_ERROR"),
    ADDRESS_UPDATE_ERROR(60003,"ADDRESS_UPDATE_ERROR"),
    ADDRESS_USER_ERROR(60004,"ADDRESS_USER_ERROR"),
    ADDRESS_DEFAULT_EXIST(60005,"ADDRESS_DEFAULT_EXIST"),
    ADDRESS_DEFAULT_NOT_EXIST(60006,"ADDRESS_DEFAULT_NOT_EXIST"),

    //订单
    ORDER_NOT_EXIST(70000,"ORDER_NOT_EXIST"),
    ORDER_DETAIL_NOT_EXIST(70001,"ORDER_DETAIL_NOT_EXIST"),
    ORDER_STATE_ERROR(70002,"ORDER_STATE_ERROR"),
    ORDER_UPDATE_FAIL(70003,"ORDER_UPDATE_FAIL"),
    ORDER_DETAIL_EMPTY(70004,"ORDER_DETAIL_EMPTY"),
    ORDER_PAY_STATE_ERROR(70005,"ORDER_PAY_STATE_ERROR"),
    ORDER_PARAM_ERROR(70006,"ORDER_PARAM_ERROR"),
    ORDER_PRODUCT_EMPTY(70007,"ORDER_PRODUCT_EMPTY"),
    ORDER_OWNER_ERROR(70008,"ORDER_OWNER_ERROR"),
    ORDER_PAY_NOT(70009,"ORDER_PAY_NOT"),
    ORDER_HAS_BEEN_PAID(70010,"ORDER_HAS_BEEN_PAID"),
    ORDER_TRANSACTION_NUMBER_ERROR(70011,"ORDER_TRANSACTION_NUMBER_ERROR"),

    //微信支付
    WXPAY_NOTIFY_MONEY_VARIFY_ERROR(80000,"WXPAY_NOTIFY_MONEY_VARIFY_ERROR"),
    WXPAY_NOTIFY_OPENID_VARIFY_ERROR(80001,"WXPAY_NOTIFY_OPENID_VARIFY_ERROR"),
    WXPAY_REFUND_ERROR(80002,"WXPAY_REFUND_ERROR"),
    WXPAY_REFUND_ERROR_SHIPPED(80003,"WXPAY_REFUND_ERROR_SHIPPED"),

    //卖家
    LOGIN_FAIL(90001,"LOGIN_FAIL"),
    LOGOUT_SUCCESS(90002,"LOGOUT_SUCCESS"),
    USER_NOT_EXIST_OR_AUTH(90003,"USER_NOT_EXIST_OR_AUTH"),
    ADMIN_RIGHTS_NOT_ENOUGH(90004,"ADMIN_RIGHTS_NOT_ENOUGH"),
    ADMIN_UPDATE_FAIL(90005,"ADMIN_UPDATE_FAIL"),
    ADMIN_STATE_ERROR(90006,"ADMIN_STATE_ERROR"),
    UNABLE_DISABLE_YOURSELF(90007,"UNABLE_DISABLE_YOURSELF"),
    UNABLE_DELETE_YOURSELF(90008,"UNABLE_DELETE_YOURSELF"),
    ADMIN_DELETE_FAIL(90009,"ADMIN_DELETE_FAIL"),
    QRLOGIN_BIND_SUCCEED(90010,"QRLOGIN_BIND_SUCCEED"),
    PASSWORD_LENGTH_ERROR(900010,"PASSWORD_LENGTH_ERROR"),
    DINNER_FORM_PARAM_ERROR(900101,"DINNER_FORM_PARAM_ERROR"),
    DINNER_NOT_EXIST(900102,"DINNER_NOT_EXIST"),
    DINNER_ALREADY_EXIST(900102,"DINNER_ALREADY_EXIST"),
    ;


    public final Integer code;
    public final String message;

    ResultEnum(Integer code , String message){
        this.code = code;
        this.message = message;
    }

    @Override
    public Integer getCode() {
        return code;
    }

    @Override
    public String getMessage() {
        return message;
    }


}
